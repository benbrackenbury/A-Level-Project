{"ast":null,"code":"import _objectSpread from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/mnt/c/Users/Ben Brackenbury/CS Project/client/src/Pages/Upload/Upload.js\";\nimport React, { Component } from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport './Upload.css';\n\nvar imgur = require('imsave')('074bfa89ec1444c');\n\nvar cookies = new Cookies();\n\nvar Upload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Upload, _Component);\n\n  function Upload() {\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this));\n    _this.state = {\n      description: '',\n      category: '',\n      points: 1\n    };\n    _this.formChange = _this.formChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formSubmit = _this.formSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!cookies.get('user')) window.location = '/login';\n    }\n  }, {\n    key: \"formChange\",\n    value: function formChange(e) {\n      var _this2 = this;\n\n      var field = e.target.id;\n      var value = e.target.value;\n\n      switch (field) {\n        case 'image_file':\n          var FR = new FileReader();\n          FR.addEventListener(\"load\", function (e) {\n            _this2.setState({\n              image_file: document.getElementById('image_file').files[0]\n            });\n          });\n          FR.readAsDataURL(e.target.files[0]);\n          break;\n\n        case 'description':\n          this.setState({\n            description: value\n          });\n          break;\n\n        case 'category':\n          this.setState({\n            category: value\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"formSubmit\",\n    value: function formSubmit(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      imgur(this.state.image_file, function (err, imgur_link) {\n        if (err) throw err;\n\n        _this3.setState({\n          imgur_link: imgur_link\n        });\n\n        var _cookies$get = cookies.get('user'),\n            username = _cookies$get.username;\n\n        _this3.setState({\n          user: username,\n          date: Date()\n        });\n\n        var postData = _objectSpread({}, _this3.state);\n\n        delete postData.image_file; //because we dont need to actual file now we have the imgur link\n\n        var token = cookies.get('token');\n        console.log('token', token);\n        axios.post('/api/post', postData, {\n          headers: {\n            Authorization: token\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        }).then(function (response) {\n          console.log(response); //todo: create posts table & sort this out\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Upload an Image\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"needs-validation\",\n        noValidate: true,\n        onSubmit: this.formSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"image_file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Choose an image\"), React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        id: \"image_file\",\n        accept: \"image/png, image/jpeg\",\n        required: true,\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"textarea\", {\n        type: \"textarea\",\n        className: \"form-control\",\n        id: \"description\",\n        placeholder: \"Description\",\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Select a Category\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"category\",\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Login\"))));\n    }\n  }]);\n\n  return Upload;\n}(Component);\n\nexport default Upload;","map":{"version":3,"sources":["/mnt/c/Users/Ben Brackenbury/CS Project/client/src/Pages/Upload/Upload.js"],"names":["React","Component","Cookies","axios","imgur","require","cookies","Upload","state","description","category","points","formChange","bind","formSubmit","get","window","location","e","field","target","id","value","FR","FileReader","addEventListener","setState","image_file","document","getElementById","files","readAsDataURL","preventDefault","err","imgur_link","username","user","date","Date","postData","token","console","log","post","headers","Authorization","catch","then","response"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Cookies from 'universal-cookie'\r\nimport axios from 'axios'\r\nimport './Upload.css'\r\nvar imgur = require('imsave')('074bfa89ec1444c')\r\n\r\nconst cookies = new Cookies()\r\n\r\nclass Upload extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            description: '',\r\n            category: '',\r\n            points: 1\r\n        }\r\n        this.formChange = this.formChange.bind(this)\r\n        this.formSubmit = this.formSubmit.bind(this)\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (!cookies.get('user')) window.location = '/login'\r\n    }\r\n\r\n    formChange(e) {\r\n        let field = e.target.id\r\n        let value = e.target.value\r\n        switch (field) {\r\n            case 'image_file':\r\n                var FR = new FileReader()\r\n                FR.addEventListener(\"load\", e => {\r\n                    this.setState({ image_file: document.getElementById('image_file').files[0] })\r\n                })\r\n                FR.readAsDataURL(e.target.files[0])\r\n                break;\r\n\r\n            case 'description':\r\n                this.setState({ description: value })\r\n                break;\r\n\r\n            case 'category':\r\n                this.setState({ category: value })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    formSubmit(e) {\r\n        e.preventDefault()\r\n        imgur(this.state.image_file, (err, imgur_link) => {\r\n            if (err) throw err\r\n            this.setState({ imgur_link })\r\n            let { username } = cookies.get('user')\r\n            this.setState({ user: username, date: Date() })\r\n            let postData = { ...this.state }\r\n            delete postData.image_file //because we dont need to actual file now we have the imgur link\r\n            let token = cookies.get('token')\r\n            console.log('token', token)\r\n            axios.post('/api/post', postData, {\r\n                headers: { Authorization: token }\r\n            })\r\n                .catch(err => console.log(err))\r\n                .then(response => {\r\n                    console.log(response)\r\n                    //todo: create posts table & sort this out\r\n                })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Upload\">\r\n                <div className=\"wrapper\">\r\n                    <h1 className=\"title\">Upload an Image</h1><br />\r\n\r\n                    <form className=\"needs-validation\" noValidate onSubmit={this.formSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"image_file\">Choose an image</label>\r\n                            <input type=\"file\" className=\"form-control\" id=\"image_file\" accept=\"image/png, image/jpeg\" required onChange={this.formChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <textarea type=\"textarea\" className=\"form-control\" id=\"description\" placeholder=\"Description\" onChange={this.formChange} />\r\n                        </div >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"category\">Select a Category</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"category\" onChange={this.formChange} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n                    </form >\r\n\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Upload"]},"metadata":{},"sourceType":"module"}