{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/Ben Brackenbury/CS Project/client/src/Pages/Category/Category.js\";\nimport React, { Component } from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport './Category.css';\nimport Post from '../../Components/Post/Post';\nvar cookies = new Cookies();\n\nvar Category =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Category, _Component);\n\n  function Category() {\n    var _this;\n\n    _classCallCheck(this, Category);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Category).call(this));\n    _this.state = {\n      category: 'Category',\n      posts: [],\n      postCount: ''\n    };\n    return _this;\n  }\n\n  _createClass(Category, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      if (!cookies.get('user')) window.location = '/login';\n      var token = cookies.get('token');\n      var path = this.props.location.pathname;\n      if (path == '/category' || path == '/category/') alert('no category provides');\n      var category = path.split('/category/')[1];\n      this.setState({\n        category: category\n      });\n      axios.get(\"/api/post/category/\".concat(category, \"?token=\").concat(token)).catch(function (err) {\n        return console.error(err);\n      }).then(function (response) {\n        var posts = response.data.result;\n        var postCount = \"\".concat(posts.length, \" \").concat(post.length == 1 ? post : post);\n\n        _this2.setState({\n          posts: posts,\n          postCount: posts.length\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.category), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.postCount)), React.createElement(\"div\", {\n        className: \"PostsView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.posts.map(function (post) {\n        return React.createElement(Post, {\n          key: post.id,\n          postID: \"post_\".concat(post.id),\n          user: post.user,\n          body: post.description,\n          imgurLink: post.imgur_link,\n          category: post.category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Category;\n}(Component);\n\nexport default Category;","map":{"version":3,"sources":["/mnt/c/Users/Ben Brackenbury/CS Project/client/src/Pages/Category/Category.js"],"names":["React","Component","Cookies","axios","Post","cookies","Category","state","category","posts","postCount","get","window","location","token","path","props","pathname","alert","split","setState","catch","err","console","error","then","response","data","result","length","post","map","id","user","description","imgur_link"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA,IAAMC,OAAO,GAAG,IAAIH,OAAJ,EAAhB;;IAEMI,Q;;;;;AACF,sBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,UADD;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAFU;AAOb;;;;yCAEoB;AAAA;;AACjB,UAAI,CAACL,OAAO,CAACM,GAAR,CAAY,MAAZ,CAAL,EAA0BC,MAAM,CAACC,QAAP,GAAkB,QAAlB;AAC1B,UAAIC,KAAK,GAAGT,OAAO,CAACM,GAAR,CAAY,OAAZ,CAAZ;AACA,UAAII,IAAI,GAAG,KAAKC,KAAL,CAAWH,QAAX,CAAoBI,QAA/B;AACA,UAAIF,IAAI,IAAI,WAAR,IAAuBA,IAAI,IAAI,YAAnC,EAAiDG,KAAK,CAAC,sBAAD,CAAL;AACjD,UAAIV,QAAQ,GAAGO,IAAI,CAACI,KAAL,CAAW,YAAX,EAAyB,CAAzB,CAAf;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACAL,MAAAA,KAAK,CAACQ,GAAN,8BAAgCH,QAAhC,oBAAkDM,KAAlD,GACKO,KADL,CACW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OADd,EAEKG,IAFL,CAEU,UAAAC,QAAQ,EAAI;AACd,YAAIjB,KAAK,GAAGiB,QAAQ,CAACC,IAAT,CAAcC,MAA1B;AACA,YAAIlB,SAAS,aAAMD,KAAK,CAACoB,MAAZ,cAAsBC,IAAI,CAACD,MAAL,IAAe,CAAf,GAAmBC,IAAnB,GAA0BA,IAAhD,CAAb;;AACA,QAAA,MAAI,CAACV,QAAL,CAAc;AAAEX,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,SAAS,EAAED,KAAK,CAACoB;AAA1B,SAAd;AACH,OANL;AAOH;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKtB,KAAL,CAAWC,QAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWG,SAAhB,CAFJ,CADJ,EAMI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,KAAL,CAAWE,KAAX,CAAiBsB,GAAjB,CAAqB,UAAAD,IAAI;AAAA,eACtB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACE,EAAhB;AAAoB,UAAA,MAAM,iBAAUF,IAAI,CAACE,EAAf,CAA1B;AAA+C,UAAA,IAAI,EAAEF,IAAI,CAACG,IAA1D;AAAgE,UAAA,IAAI,EAAEH,IAAI,CAACI,WAA3E;AAAwF,UAAA,SAAS,EAAEJ,IAAI,CAACK,UAAxG;AAAoH,UAAA,QAAQ,EAAEL,IAAI,CAACtB,QAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsB;AAAA,OAAzB,CADL,CANJ,CADJ;AAeH;;;;EA1CkBP,S;;AA8CvB,eAAeK,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Cookies from 'universal-cookie'\r\nimport axios from 'axios'\r\nimport './Category.css'\r\nimport Post from '../../Components/Post/Post'\r\n\r\nconst cookies = new Cookies()\r\n\r\nclass Category extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            category: 'Category',\r\n            posts: [],\r\n            postCount: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (!cookies.get('user')) window.location = '/login'\r\n        let token = cookies.get('token')\r\n        let path = this.props.location.pathname\r\n        if (path == '/category' || path == '/category/') alert('no category provides')\r\n        let category = path.split('/category/')[1]\r\n        this.setState({ category })\r\n        axios.get(`/api/post/category/${category}?token=${token}`)\r\n            .catch(err => console.error(err))\r\n            .then(response => {\r\n                let posts = response.data.result\r\n                let postCount = `${posts.length} ${post.length == 1 ? post : post}`\r\n                this.setState({ posts, postCount: posts.length })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Category\">\r\n                <div className=\"header\">\r\n                    <h1>{this.state.category}</h1>\r\n                    <h4>{this.state.postCount}</h4>\r\n                </div>\r\n\r\n                <div className=\"PostsView\">\r\n                    {this.state.posts.map(post => (\r\n                        <Post key={post.id} postID={`post_${post.id}`} user={post.user} body={post.description} imgurLink={post.imgur_link} category={post.category} />\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}