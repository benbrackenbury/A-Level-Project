{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/mnt/c/Users/Ben Brackenbury/CS Project/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/mnt/c/Users/Ben Brackenbury/CS Project/client/src/Pages/Register/Register.js\";\nimport React, { Component } from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport './Register.css';\nvar cookies = new Cookies();\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this));\n    console.log('this.props', _this.props);\n    _this.state = {\n      name: '',\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      avatar: '',\n      bio: ''\n    };\n    _this.formChange = _this.formChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formSubmit = _this.formSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (cookies.get('user')) window.location = '/';\n    }\n  }, {\n    key: \"formChange\",\n    value: function formChange(e) {\n      var field = e.target.id;\n      var value = e.target.value;\n\n      switch (field) {\n        case 'name':\n          this.setState({\n            name: value\n          });\n          break;\n\n        case 'username':\n          this.setState({\n            username: value\n          });\n          break;\n\n        case 'email':\n          this.setState({\n            email: value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: value\n          });\n          break;\n\n        case 'confirm-password':\n          this.setState({\n            confirmPassword: value\n          });\n          break;\n\n        case 'avatar':\n          this.setState({\n            avatar: value\n          });\n          break;\n\n        case 'bio':\n          this.setState({\n            bio: value\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"formSubmit\",\n    value: function formSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var _this$state = this.state,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n\n      if (password != confirmPassword) {\n        alert('You have entered two different passwords, make sure they match.');\n      } else {\n        axios.post(\"/api/user\", this.state).then(function (response) {\n          console.log(response);\n          var _this2$state = _this2.state,\n              name = _this2$state.name,\n              username = _this2$state.username,\n              email = _this2$state.email,\n              avatar = _this2$state.avatar,\n              bio = _this2$state.bio;\n          var userCookie = {\n            name: name,\n            username: username,\n            email: email,\n            avatar: avatar,\n            bio: bio\n          };\n          cookies.set('user', userCookie, {\n            path: '/'\n          });\n          console.log('cookies', cookies.get('user'));\n          window.location = '/feed';\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Create an account\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"needs-validation\",\n        noValidate: true,\n        onSubmit: this.formSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"John Smith\",\n        required: true,\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"username\",\n        placeholder: \"johnsmith1\",\n        required: true,\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"email\",\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"johnsmith@example.com\",\n        required: true,\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        id: \"emailHelp\",\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"We'll never share your email with anyone else.\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"confirm-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"confirm-password\",\n        placeholder: \"Confirm Password\",\n        required: true,\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Choose an Avatar (optional)\"), React.createElement(\"input\", {\n        type: \"file\",\n        id: \"avatar\",\n        style: {\n          margin: \"0 auto\"\n        },\n        accept: \"image/png, image/jpeg\",\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"Bio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Bio (optional)\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"Bio\",\n        placeholder: \"Introduce yourself\",\n        onChange: this.formChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Register\"))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/mnt/c/Users/Ben Brackenbury/CS Project/client/src/Pages/Register/Register.js"],"names":["React","Component","Cookies","axios","cookies","Register","console","log","props","state","name","username","email","password","confirmPassword","avatar","bio","formChange","bind","formSubmit","get","window","location","e","field","target","id","value","setState","preventDefault","alert","post","then","response","userCookie","set","path","catch","err","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Cookies from 'universal-cookie'\r\nimport axios from 'axios'\r\nimport './Register.css'\r\n\r\nconst cookies = new Cookies()\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super()\r\n        console.log('this.props', this.props)\r\n        this.state = {\r\n            name: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            avatar: '',\r\n            bio: ''\r\n        }\r\n        this.formChange = this.formChange.bind(this)\r\n        this.formSubmit = this.formSubmit.bind(this)\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (cookies.get('user')) window.location = '/'\r\n    }\r\n\r\n    formChange(e) {\r\n        let field = e.target.id\r\n        let value = e.target.value\r\n        switch (field) {\r\n            case 'name':\r\n                this.setState({ name: value })\r\n                break;\r\n\r\n            case 'username':\r\n                this.setState({ username: value })\r\n                break;\r\n\r\n            case 'email':\r\n                this.setState({ email: value })\r\n                break;\r\n\r\n            case 'password':\r\n                this.setState({ password: value })\r\n                break;\r\n\r\n            case 'confirm-password':\r\n                this.setState({ confirmPassword: value })\r\n                break;\r\n\r\n            case 'avatar':\r\n                this.setState({ avatar: value })\r\n                break;\r\n\r\n            case 'bio':\r\n                this.setState({ bio: value })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    formSubmit(e) {\r\n        e.preventDefault()\r\n        let { password, confirmPassword } = this.state\r\n        if (password != confirmPassword) {\r\n            alert('You have entered two different passwords, make sure they match.')\r\n        } else {\r\n            axios.post(`/api/user`, this.state)\r\n                .then(response => {\r\n                    console.log(response)\r\n                    let { name, username, email, avatar, bio } = this.state\r\n                    let userCookie = { name, username, email, avatar, bio }\r\n                    cookies.set('user', userCookie, { path: '/' })\r\n                    console.log('cookies', cookies.get('user'))\r\n                    window.location = '/feed'\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Register\">\r\n                <div className=\"wrapper\">\r\n                    <h1 className=\"title\">Create an account</h1><br />\r\n\r\n                    <form className=\"needs-validation\" noValidate onSubmit={this.formSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Full Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"John Smith\" required onChange={this.formChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"johnsmith1\" required onChange={this.formChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"johnsmith@example.com\" required onChange={this.formChange} />\r\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" required onChange={this.formChange} />\r\n                        </div >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"confirm-password\" placeholder=\"Confirm Password\" required onChange={this.formChange} />\r\n                        </div >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"avatar\">Choose an Avatar (optional)</label>\r\n                            <input type=\"file\" id=\"avatar\" style={{ margin: \"0 auto\" }} accept=\"image/png, image/jpeg\" onChange={this.formChange} />\r\n                        </div >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Bio\">Bio (optional)</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"Bio\" placeholder=\"Introduce yourself\" onChange={this.formChange} />\r\n                        </div >\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n                    </form >\r\n\r\n                </div >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}